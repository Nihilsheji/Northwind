// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Northwind.DbContexts;

namespace Northwind.Migrations
{
    [DbContext(typeof(NorthwindDbContext))]
    partial class NorthwindDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CustomerDemographic", b =>
                {
                    b.Property<string>("CustomersId")
                        .HasColumnType("varchar(5)");

                    b.Property<int>("DemographicsId")
                        .HasColumnType("int");

                    b.HasKey("CustomersId", "DemographicsId");

                    b.HasIndex("DemographicsId");

                    b.ToTable("CustomerDemographic");
                });

            modelBuilder.Entity("EmployeeTerritory", b =>
                {
                    b.Property<int>("EmployeesId")
                        .HasColumnType("int");

                    b.Property<int>("TerritoriesId")
                        .HasColumnType("int");

                    b.HasKey("EmployeesId", "TerritoriesId");

                    b.HasIndex("TerritoriesId");

                    b.ToTable("EmployeeTerritory");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CategoryName");

                    b.Property<string>("Picture")
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Customer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(5)")
                        .HasColumnName("CustomerID");

                    b.Property<string>("Address")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("City")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("ContactName")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ContactTitle")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Fax")
                        .HasColumnType("varchar(24)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(24)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Region")
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Demographic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Demographics");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Extension")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HomePhone")
                        .HasColumnType("varchar(24)");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("Photo")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Region")
                        .HasColumnType("varchar(15)");

                    b.Property<int>("ReportsToId")
                        .HasColumnType("int")
                        .HasColumnName("ReportsTo");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("TitleOfCourtesy")
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("ReportsToId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasColumnName("CustomerID");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<float>("Freight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float(1)")
                        .HasDefaultValue(0f);

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RequiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipAddress")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ShipCity")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("ShipCountry")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("ShipName")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("ShipPostalCode")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ShipRegion")
                        .HasColumnType("varchar(15)");

                    b.Property<int>("ShipViaId")
                        .HasColumnType("int")
                        .HasColumnName("ShipVia");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ShipViaId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Northwind.Models.Entities.OrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("odID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float(1)")
                        .HasDefaultValue(0.0);

                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("OrderID");

                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("ProductID");

                    b.Property<short>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)1);

                    b.Property<double>("UnitPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float(1)")
                        .HasDefaultValue(0.0);

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<byte>("Discontinued")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("ProductName")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("QuantityPerUnit")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<short>("ReorderLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("SupplierID");

                    b.Property<double>("UnitPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float(1)")
                        .HasDefaultValue(0.0);

                    b.Property<short>("UnitsInStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<short>("UnitsOnOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RegionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RegionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Shipper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ShipperID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(24)");

                    b.HasKey("Id");

                    b.ToTable("Shippers");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SupplierID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("City")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("ContactName")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ContactTitle")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Fax")
                        .HasColumnType("varchar(24)");

                    b.Property<string>("HomePage")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(24)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Region")
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Territory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TerritoryID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int")
                        .HasColumnName("RegionID");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Territories");
                });

            modelBuilder.Entity("CustomerDemographic", b =>
                {
                    b.HasOne("Northwind.Models.Entities.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Northwind.Models.Entities.Demographic", null)
                        .WithMany()
                        .HasForeignKey("DemographicsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeTerritory", b =>
                {
                    b.HasOne("Northwind.Models.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Northwind.Models.Entities.Territory", null)
                        .WithMany()
                        .HasForeignKey("TerritoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Northwind.Models.Entities.Employee", b =>
                {
                    b.HasOne("Northwind.Models.Entities.Employee", "ReportsTo")
                        .WithMany("Subordinates")
                        .HasForeignKey("ReportsToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportsTo");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Order", b =>
                {
                    b.HasOne("Northwind.Models.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Northwind.Models.Entities.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Northwind.Models.Entities.Shipper", "ShipVia")
                        .WithMany("Orders")
                        .HasForeignKey("ShipViaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("ShipVia");
                });

            modelBuilder.Entity("Northwind.Models.Entities.OrderDetails", b =>
                {
                    b.HasOne("Northwind.Models.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Northwind.Models.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Product", b =>
                {
                    b.HasOne("Northwind.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Northwind.Models.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Territory", b =>
                {
                    b.HasOne("Northwind.Models.Entities.Region", "Region")
                        .WithMany("Territories")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Employee", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Subordinates");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Region", b =>
                {
                    b.Navigation("Territories");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Shipper", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Northwind.Models.Entities.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
